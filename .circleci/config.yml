version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0

executors:
  node:
    docker:
      - image: cimg/node:10.24.1
    working_directory: ~/rentdynamics-js

jobs:
  prepare:
    executor: node
    steps:
      - checkout:
          path: ~/rentdynamics-js
      - run:
          name: Install NVM
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
            echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
            echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
      - run: 
          name: Install Node.js versions
          command: |
            nvm install 10
            nvm install 12
            nvm install 14
            nvm install 16
            nvm install 18
            nvm alias default 10
      - persist_to_workspace:
          root: ~/
          paths: [rentdynamics-js, .nvm]

  test_version:
    executor: node
    parameters:
      node_version:
        type: string
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Use Node.js << parameters.node_version >>
          command: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" 
            nvm use << parameters.node_version >>
      - restore_cache:
          key: v1-dependencies-<< parameters.node_version >>-{{ checksum "./package.json" }}
      - run:
          name: Install node modules
          command: npm install
      - save_cache:
          key: v1-dependencies-<< parameters.node_version >>-{{ checksum "./package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build Project 
          command: npm run build
      - run:
          name: Run tests (Node.js << parameters.node_version >>)
          command: npm test

  publish-npm:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Publish package to npm
          command: |
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            npm publish

  publish-cdn-dev:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - aws-cli/setup
      - run:
          name: Publish package to dev cdn
          command: |
            aws s3 cp ./dist/rentdynamics.$(jq .version package.json -r).js s3://$CDNJS_DEV_BUCKET_NAME
            aws s3 cp ./dist/rentdynamics.latest.js s3://$CDNJS_DEV_BUCKET_NAME
            aws cloudfront create-invalidation --distribution-id $CDNJS_DEV_DISTRIBUTION_ID --paths '/*'

  publish-cdn-prod:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - aws-cli/setup
      - run:
          name: Publish package to cdn
          command: |
            aws s3 cp ./dist/rentdynamics.$(jq .version package.json -r).js s3://$CDNJS_BUCKET_NAME
            aws s3 cp ./dist/rentdynamics.latest.js s3://$CDNJS_BUCKET_NAME
            aws cloudfront create-invalidation --distribution-id $CDNJS_DISTRIBUTION_ID --paths '/*'

workflows:
  test-and-release:
    jobs:
      - prepare

      - test_version:
          requires: [prepare]
          name: test-node-10
          node_version: "10"
      - test_version:
          requires: [prepare]
          name: test-node-12
          node_version: "12"
      - test_version:
          requires: [prepare]
          name: test-node-14
          node_version: "14"
      - test_version:
          requires: [prepare]
          name: test-node-16
          node_version: "16"
      - test_version:
          requires: [prepare]
          name: test-node-18
          node_version: "18"

      - publish-npm:
          requires: [test-node-10, test-node-12, test-node-14, test-node-16, test-node-18]
          filters:
            branches:
              only:
                - master

      - publish-cdn-dev:
          requires: [test-node-10, test-node-12, test-node-14, test-node-16, test-node-18]
          filters:
            branches:
              only:
                - master
                - /^.*__dev$/

      - publish-cdn-prod:
          requires: [publish-npm, publish-cdn-dev]
          filters:
            branches:
              only:
                - master
