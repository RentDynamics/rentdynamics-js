version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0

executors:
  node:
    docker:
      - image: cimg/node:10.24.1
    working_directory: ~/rentdynamics-js

jobs:
  prepare:
    executor: node
    steps:
      - checkout:
          path: ~/rentdynamics-js
      - restore_cache:
          key: v1-dependencies-{{ checksum "./package.json" }}
      - run:
          name: Install node modules
          command: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "./package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: ~/
          paths: [rentdynamics-js]

  test:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run tests
          command: npm test
      - run:
         name: Run Backslash
         command: |
           # Download the latest CLI for Linux amd64
           curl https://s3.amazonaws.com/cli-bin.backslash.security/latest/backslashctl-linux-x64 -o backslashctl
           # Verify the checksum of the binary
           echo "$(curl -s https://s3.amazonaws.com/cli-sha.backslash.security/latest/backslashctl-linux-x64.sha256)  backslashctl" | sha256sum -c
           # Modify the permissions of the binary to ensure it is executable
           chmod +x ./backslashctl
           # Create an alias backslashctl of the binary to ensure it is available in other directory
           alias backslashctl="$PWD/backslashctl"
           ./backslashctl analyze --repositoryCloneUrl="${CIRCLE_REPOSITORY_URL}" --analyzedBranch="${CIRCLE_BRANCH}" --baselineBranch="master" --gitProvider="github" --gitProviderOrganization="RentDynamics" --deltaScan=true --authToken="${BACKSLASH_AUTH_TOKEN}"

  publish-npm:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Publish package to npm
          command: |
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            npm publish

  publish-cdn-dev:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - aws-cli/setup
      - run:
          name: Publish package to dev cdn
          command: |
            aws s3 cp ./dist/rentdynamics.$(jq .version package.json -r).js s3://$CDNJS_DEV_BUCKET_NAME
            aws s3 cp ./dist/rentdynamics.latest.js s3://$CDNJS_DEV_BUCKET_NAME
            aws cloudfront create-invalidation --distribution-id $CDNJS_DEV_DISTRIBUTION_ID --paths '/*'

  publish-cdn-prod:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - aws-cli/setup
      - run:
          name: Publish package to cdn
          command: |
            aws s3 cp ./dist/rentdynamics.$(jq .version package.json -r).js s3://$CDNJS_BUCKET_NAME
            aws s3 cp ./dist/rentdynamics.latest.js s3://$CDNJS_BUCKET_NAME
            aws cloudfront create-invalidation --distribution-id $CDNJS_DISTRIBUTION_ID --paths '/*'

workflows:
  test-and-release:
    jobs:
      - prepare

      - test:
          context:
            - RentDynamicsGeneral
          requires: [prepare]

      - publish-npm:
          context:
            - RentDynamicsGeneral
          requires: [test]
          filters:
            branches:
              only:
                - master

      - publish-cdn-dev:
          context:
            - RentDynamicsGeneral
          requires: [test]
          filters:
            branches:
              only:
                - master
                - /^.*__dev$/

      - publish-cdn-prod:
          context:
            - RentDynamicsGeneral
          requires: [publish-npm, publish-cdn-dev]
          filters:
            branches:
              only:
                - master
